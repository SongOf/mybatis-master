<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace为dao接口的全限定类名-->
<mapper namespace="com.mybatis.dao.IUserDao">
    <!--配置查询所有-->
    <!--id是dao接口的方法名-->
    <select id="findAll" resultType="com.mybatis.domain.User">
        select * from user
    </select>
    <!--保存用户-->
    <insert id="saveUser" parameterType="com.mybatis.domain.User">
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values(#{username},#{address},#{sex},#{birthday});
    </insert>
    <!--更新用户-->
    <update id="updateUser" parameterType="com.mybatis.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id};
    </update>
    <!--删除用户-->
    <!--参数只有一个时，uid只是一个占位符 对应userId 占位符名称随意-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{uid};
    </delete>
    <!--根据id查询用户-->
    <select id="findUserById" parameterType="INT" resultType="com.mybatis.domain.User">
        select * from user where id=#{uid};
    </select>
    <!--根据用户名查询用户-->
    <select id="findUserByName" parameterType="string" resultType="com.mybatis.domain.User">
        select * from user where username like #{uname}
    </select>
</mapper>